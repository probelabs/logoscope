name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive: tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Build
        run: |
          cargo build --manifest-path logoscope/Cargo.toml --release --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          set -euo pipefail
          BIN_NAME=logoscope
          OUTDIR=target/${{ matrix.target }}/release
          ART_BASE=${BIN_NAME}-${{ matrix.target }}
          mkdir -p dist
          if [ "${{ matrix.archive }}" = "zip" ]; then
            7z a dist/${ART_BASE}.zip ${OUTDIR}/${BIN_NAME}.exe > /dev/null
          else
            tar -C ${OUTDIR} -czf dist/${ART_BASE}.tar.gz ${BIN_NAME}
          fi
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

